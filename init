#!/usr/bin/sh

set -e

readonly config_dir="$HOME/.config/git"
force=false
target_dir=

cp()
{
	${force} && cp "$1" "$2" || cp -i "$1" "$2"
}

while (( $# > 0 )); do
	case "$1" in 
		--force) 		force=true				;;
		--target-directory) 	target_dir="$2"	&& shift		;;
		*) 			printf 'invalid argument' && exit 1	;;
	esac
	shift
done

# TODO: verify in git repository
printf 'verifying node installation: '

node --version || \
	{ printf 'node not installed. downloading... ' && curl -s -X GET https://nodejs.org/dist/v12.16.2/node-v12.16.2-x64.msi > node.msi && printf 'starting installation\n' && cmd //c "msiexec.exe /i node.msi"; }

# TODO: test
script_dir="$(dirname "$0")"

printf 'script directory: %s\n' "${script_dir}"

# TODO: verify not exists
[ ! -d "${config_dir}" ] && { printf 'creating config directory: %s\n' "${config_dir}" && mkdir -p "${config_dir}"; } || printf 'config directory %s already exists' "${config_dir}"

printf 'copying %s to %s\n' "${script_dir}/commit-template" "${config_dir}"
cp "${script_dir}/commit-template" "${config_dir}"

[ ! -z "${target_dir}" ] && cd "${target_dir}"

printf 'setting up commit template %s\n' "${config_dir}/commit-template"
git config --local commit.template "${config_dir}/commit-template"

printf 'copying %s to %s\n' "${script_dir}/commit-msg" "$PWD/.git/hooks/"
cp "${script_dir}/commit-msg" .git/hooks/ 

printf 'copying %s to %s\n' "${script_dir}/commitlint.config.js" "$PWD"
cp "${script_dir}/commitlint.config.js" "$PWD"

# TODO: only install if required?
printf 'installing commitlint/cli, commitlint/config-conventional, conventional-changelog-conventionalcommits, and commitlint-plugin-cleanfeet\n'
npm install @commitlint/config-conventional @commitlint/cli conventional-changelog-conventionalcommits commitlint-plugin-cleanfeet

printf 'all done!\n'

# vim: set filetype=sh:
